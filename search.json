[{"path":"https://nvctr.ansperformance.eu/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 EUROCONTROL Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-01","dir":"Articles","previous_headings":"","what":"Example 1: A and B to delta","title":"Simple and Exact Solutions to Position Calculation","text":"Given two positions \\(\\) \\(B\\), find exact vector \\(\\) \\(B\\) meters north, east , find direction (azimuth/bearing) \\(B\\), relative north. Use WGS-84 ellipsoid. Figure 1: B delta.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution","dir":"Articles","previous_headings":"Example 1: A and B to delta","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Transform positions \\(\\) \\(B\\) (decimal) degrees depths: Step 1: Convert n-vectors, \\(\\mathbf{n}_{EA}^E\\) \\(\\mathbf{n}_{EB}^E\\) Step 2: Find \\(\\mathbf{p}_{AB}^E\\) (delta decomposed E). WGS-84 ellipsoid default Step 3: Find \\(\\mathbf{R}_{EN}\\) position \\(\\) Step 4: Find \\(\\mathbf{p}_{AB}^N = \\mathbf{R}_{NE} \\mathbf{p}_{AB}^E\\) vector \\(\\mathbf{p}_{AB}^N\\) connects B North-East-framework. line--sight distance, meters, B altitude (elevation horizon), decimal degrees, Step 5: Also find direction \\(B\\) (azimuth), decimal degrees, relative true North","code":"# Position A: lat_EA <- rad(1) lon_EA <- rad(2) z_EA <- 3  # Position B: lat_EB <- rad(4) lon_EB <- rad(5) z_EB <- 6 (n_EA_E <- lat_lon2n_E(lat_EA, lon_EA)) #> [1] 0.99923861 0.03489418 0.01745241 (n_EB_E <- lat_lon2n_E(lat_EB, lon_EB)) #> [1] 0.99376802 0.08694344 0.06975647 (p_AB_E <-  n_EA_E_and_n_EB_E2p_AB_E(n_EA_E, n_EB_E, z_EA, z_EB)) #> [1] -34798.44 331985.66 331375.96 (R_EN <- n_E2R_EN(n_EA_E)) #>               [,1]       [,2]        [,3] #> [1,] -0.0174417749 -0.0348995 -0.99923861 #> [2,] -0.0006090802  0.9993908 -0.03489418 #> [3,]  0.9998476952  0.0000000 -0.01745241 # (Note the transpose of R_EN: The \"closest-rule\" says that when # decomposing, the frame in the subscript of the rotation matrix that is # closest to the vector, should equal the frame where the vector is # decomposed. Thus the calculation R_NE*p_AB_E is correct, since the vector # is decomposed in E, and E is closest to the vector. In the above example # we only had R_EN, and thus we must transpose it: base::t(R_EN) = R_NE) (p_AB_N <- base::t(R_EN) %*% p_AB_E %>%     as.vector()) #> [1] 331730.23 332997.87  17404.27 (los_distance <- norm(p_AB_N, type = \"2\")) #> [1] 470356.7 (elevation <- atan2(-p_AB_N[3], p_AB_N[2]) %>% deg()) #> [1] -2.991865 (azimuth <- atan2(p_AB_N[2], p_AB_N[1]) %>%   # positive angle about down-axis   deg()) #> [1] 45.10926"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-02","dir":"Articles","previous_headings":"","what":"Example 2: B and delta to C","title":"Simple and Exact Solutions to Position Calculation","text":"radar sonar attached vehicle \\(B\\) (Body coordinate frame) measures distance direction object \\(C\\). assume distance two angles (typically bearing elevation relative \\(B\\)) already combined vector \\(\\mathbf{p}_{BC}^B\\) (.e. vector \\(B\\) \\(C\\), decomposed B). position \\(B\\) given \\(\\mathbf{n}_{EB}^E\\) \\(z_{EB}\\), orientation (attitude) \\(B\\) given \\(\\mathbf{R}_{NB}\\) (rotation matrix can found roll/pitch/yaw using zyx2R). Find exact position object \\(C\\) n-vector depth (\\(\\mathbf{n}_{EC}^E\\) \\(z_{EC}\\)), assuming Earth ellipsoid semi-major axis \\(\\) flattening \\(f\\). WGS-72, use \\(= 6378135~\\mathrm{m}\\) \\(f = \\dfrac{1}{298.26}\\). Figure 2: B delta C.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-1","dir":"Articles","previous_headings":"Example 2: B and delta to C","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Step 1: Find \\(\\mathbf{R}_{EN}\\) Step 2: Find \\(\\mathbf{R}_{EB}\\) \\(\\mathbf{R}_{EN}\\) \\(\\mathbf{R}_{NB}\\) Step 3: Decompose delta vector \\(\\mathbf{p}_{BC}^B\\) E Step 4: Find position \\(C\\), using functions goes one position delta, new position Convert latitude longitude, height","code":"p_BC_B <- c(3000, 2000, 100)  # Position and orientation of B is given: (n_EB_E <- unit(c(1, 2, 3))) # unit() to get unit length of vector #> [1] 0.2672612 0.5345225 0.8017837 z_EB <- -400 (R_NB <- zyx2R(rad(10),rad(20),rad(30))) # the three angles are yaw, pitch, and roll #>            [,1]       [,2]       [,3] #> [1,]  0.9254166 0.01802831  0.3785223 #> [2,]  0.1631759 0.88256412 -0.4409696 #> [3,] -0.3420201 0.46984631  0.8137977  # A custom reference ellipsoid is given (replacing WGS-84): # (WGS-72) a <- 6378135 f <- 1 / 298.26 (R_EN <- n_E2R_EN(n_EB_E)) #>            [,1]       [,2]       [,3] #> [1,] -0.3585686 -0.8944272 -0.2672612 #> [2,] -0.7171372  0.4472136 -0.5345225 #> [3,]  0.5976143  0.0000000 -0.8017837 (R_EB <- R_EN %*% R_NB) # Note: closest frames cancel #>            [,1]       [,2]        [,3] #> [1,] -0.3863656 -0.9214254  0.04119242 #> [2,] -0.4078587  0.1306225 -0.90365318 #> [3,]  0.8272684 -0.3659411 -0.42627939 (p_BC_E <- R_EB %*% p_BC_B) # no transpose of R_EB, since the vector is in B) #>           [,1] #> [1,] -2997.828 #> [2,] -1052.696 #> [3,]  1707.295 l <- n_EA_E_and_p_AB_E2n_EB_E(n_EB_E, p_BC_E, z_EB, a, f) (n_EB_E <- l[['n_EB_E']]) #> [1] 0.2667916 0.5343565 0.8020507 (z_EB <- l[['z_EB']]) #> [1] -406.0072 lat_lon_EB <- n_E2lat_lon(n_EB_E) (latitude  <- lat_lon_EB[1]) #> [1] 0.9307209 (longitude <- lat_lon_EB[2]) #> [1] 1.107728  # height (= - depth) (height <- -z_EB) #> [1] 406.0072"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-3-ecef-vector-to-geodetic-latitude","dir":"Articles","previous_headings":"","what":"Example 3: ECEF-vector to geodetic latitude","title":"Simple and Exact Solutions to Position Calculation","text":"Position \\(B\\) given “ECEF-vector” \\(\\mathbf{p}_{EB}^E\\) (.e. vector E, center Earth, \\(B\\), decomposed E). Find geodetic latitude, longitude height (latEB, lonEB hEB), assuming WGS-84 ellipsoid. Figure 3: ECEF-vector geodetic latitude. Position \\(B\\) given \\(\\mathbf{p}_{EB}^E\\), .e. “ECEF-vector”","code":"(p_EB_E <- 6371e3 * c(0.9, -1, 1.1)) # m #> [1]  5733900 -6371000  7008100"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-2","dir":"Articles","previous_headings":"Example 3: ECEF-vector to geodetic latitude","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Find n-vector p-vector Convert latitude longitude, height","code":"l <- p_EB_E2n_EB_E(p_EB_E) (n_EB_E <- l[['n_EB_E']]) #> [1]  0.5170890 -0.5745433  0.6344439 (z_EB <- l[['z_EB']]) #> [1] -4702060 lat_lon_EB <- n_E2lat_lon(n_EB_E) (latEB  <- lat_lon_EB[1]) #> [1] 0.6872888 (lonEB <- lat_lon_EB[2]) #> [1] -0.8379812  # height (= - depth) (hEB <- -z_EB) #> [1] 4702060"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-4-geodetic-latitude-to-ecef-vector","dir":"Articles","previous_headings":"","what":"Example 4: Geodetic latitude to ECEF-vector","title":"Simple and Exact Solutions to Position Calculation","text":"Find ECEF-vector \\(\\mathbf{p}_{EB}^E\\) geodetic position \\(B\\) given latitude \\(lat_{EB}\\), longitude \\(lon_{EB}\\) height \\(h_{EB}\\). Figure 4: Geodetic latitude ECEF-vector.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-3","dir":"Articles","previous_headings":"Example 4: Geodetic latitude to ECEF-vector","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Step 1: Convert n-vector Step 2: Find ECEF-vector p_EB_E","code":"lat_EB <- rad(1) lon_EB <- rad(2) h_EB <- 3 (n_EB_E <- lat_lon2n_E(lat_EB, lon_EB)) #> [1] 0.99923861 0.03489418 0.01745241 (p_EB_E <- n_EB_E2p_EB_E(n_EB_E, -h_EB)) #> [1] 6373290.3  222560.2  110568.8"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-05","dir":"Articles","previous_headings":"","what":"Example 5: Surface distance","title":"Simple and Exact Solutions to Position Calculation","text":"Given two positions \\(\\) \\(\\mathbf{n}_{EA}^E\\) \\(B\\) \\(\\mathbf{n}_{EB}^E\\), find surface distance \\(s_{AB}\\) (.e. great circle distance). heights \\(\\) \\(B\\) relevant (.e. don’t zero height, seek distance points surface Earth, directly /\\(\\) \\(B\\)). Also find Euclidean distance (chord length) \\(d_{AB}\\) using nonzero heights. Assume spherical model Earth radius \\(r_{Earth} = 6371~\\mathrm{km}\\). Compare results exact calculations WGS-84 ellipsoid. Figure 5: Surface distance.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-4","dir":"Articles","previous_headings":"Example 5: Surface distance","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"","code":"n_EA_E <- lat_lon2n_E(rad(88), rad(0)); n_EB_E <- lat_lon2n_E(rad(89), rad(-170)) r_Earth <- 6371e3"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"spherical-model","dir":"Articles","previous_headings":"Example 5: Surface distance > Solution","what":"Spherical model","title":"Simple and Exact Solutions to Position Calculation","text":"great circle distance given equations (16) (Gade 2010) (\\(\\arccos\\) ill conditioned small angles; \\(\\arcsin\\) ill-conditioned angles near \\(\\pi/2\\), valid angles greater \\(\\pi/2\\)) \\(r_{roc}\\) radius curvature, .e. Earth radius + height: \\(\\begin{align} s_{AB} & = r_{roc} \\cdot \\arccos \\!\\big(\\mathbf{n}_{EA}^E \\boldsymbol{\\cdot} \\mathbf{n}_{EB}^E\\big)\\\\  & = r_{roc} \\cdot \\arcsin \\!\\big(\\big|\\mathbf{n}_{EA}^E \\boldsymbol{\\times} \\mathbf{n}_{EB}^E\\big|\\big) \\tag{16} \\end{align}\\) formulation via \\(\\operatorname{atan2}\\) equation (6) (Gade 2010) instead well conditioned angles: \\(s_{AB} = r_{roc} \\cdot \\operatorname{atan2}\\big(\\big|\\mathbf{n}_{EA}^E \\boldsymbol{\\times} \\mathbf{n}_{EB}^E\\big|,  \\mathbf{n}_{EA}^E \\boldsymbol{\\cdot} \\mathbf{n}_{EB}^E\\big) \\tag{6}\\) Euclidean distance given \\(d = r_{roc} \\cdot \\big| \\mathbf{n}_{EB}^E - \\mathbf{n}_{EA}^E \\big|\\)","code":"(s_AB <- (atan2(base::norm(pracma::cross(n_EA_E, n_EB_E), type = \"2\"),                 pracma::dot(n_EA_E, n_EB_E)) * r_Earth)) #> [1] 332456.4 (d_AB <- base::norm(n_EB_E - n_EA_E, type = \"2\") * r_Earth) #> [1] 332418.7"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"elliptical-model-wgs-84-ellipsoid","dir":"Articles","previous_headings":"Example 5: Surface distance > Solution","what":"Elliptical model (WGS-84 ellipsoid)","title":"Simple and Exact Solutions to Position Calculation","text":"distance \\(\\) \\(B\\) ca calculated via geosphere package","code":"geosphere::distGeo(c(0, 88), c(-170, 89)) #> [1] 333947.5"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-6-interpolated-position","dir":"Articles","previous_headings":"","what":"Example 6: Interpolated position","title":"Simple and Exact Solutions to Position Calculation","text":"Given position \\(B\\) time \\(t_0\\) \\(t_1\\), \\(\\mathbf{n}_{EB}^E(t_0)\\) \\(\\mathbf{n}_{EB}^E(t_1)\\). Find interpolated position time \\(t_i\\), \\(\\mathbf{n}_{EB}^E(t_i)\\). positions given n-vectors. Figure 6: Interpolated position.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-5","dir":"Articles","previous_headings":"Example 6: Interpolated position","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Standard interpolation can used directly n-vector \\[ \\mathbf{n}_{EB}^E(t_i) = \\operatorname{unit}\\Bigg(\\mathbf{n}_{EB}^E(t_0) + \\frac{t_i − t_0}{t_1 − t_0} \\Big(\\mathbf{n}_{EB}^E(t_1) − \\mathbf{n}_{EB}^E(t_0)\\Big)\\Bigg) \\] Using expression converting back longitude latitude","code":"n_EB_E_t0 <- lat_lon2n_E(rad(89.9), rad(-150)) n_EB_E_t1 <- lat_lon2n_E(rad(89.9), rad(150))  # The times are given as: t0 <- 10 t1 <- 20 ti <- 16 # time of interpolation t_frac <- (ti - t0) / (t1 - t0)  (n_EB_E_ti <- unit(n_EB_E_t0 + t_frac * (n_EB_E_t1 - n_EB_E_t0) )) #> [1] -0.0015114993  0.0001745329  0.9999988425 (l  <- n_E2lat_lon(n_EB_E_ti) %>% deg()) #> [1]  89.91282 173.41322 (latitude  <- l[1]) #> [1] 89.91282 (longitude <- l[2]) #> [1] 173.4132"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-7-mean-position-centermidpoint","dir":"Articles","previous_headings":"","what":"Example 7: Mean position (center/midpoint)","title":"Simple and Exact Solutions to Position Calculation","text":"Given three positions \\(\\), \\(B\\), \\(C\\) n-vectors \\(\\mathbf{n}_{EA}^E\\), \\(\\mathbf{n}_{EB}^E\\), \\(\\mathbf{n}_{EC}^E\\), find mean position, \\(M\\), n-vector \\(\\mathbf{n}_{EM}^E\\). Note calculation independent depths positions. Figure 7: Mean position (center/midpoint).","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-6","dir":"Articles","previous_headings":"Example 7: Mean position (center/midpoint)","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"(geographical) mean position \\(B_{GM}\\) simply given equation (17) (Gade 2010) (assuming spherical Earth) \\[ \\mathbf{n}_{EB_{GM}}^E = \\operatorname{unit}\\Big( \\sum_{= 1}^{m} \\mathbf{n}_{EB_i}^E \\Big) \\tag{17} \\] specifically three given points \\[ \\mathbf{n}_{EM}^E = \\mathrm{unit}\\Big(\\mathbf{n}_{EA}^E + \\mathbf{n}_{EB}^E + \\mathbf{n}_{EC}^E \\Big) = \\frac{\\mathbf{n}_{EA}^E + \\mathbf{n}_{EB}^E + \\mathbf{n}_{EC}^E}{\\Big | \\mathbf{n}_{EA}^E + \\mathbf{n}_{EB}^E + \\mathbf{n}_{EC}^E \\Big| } \\] Given three n-vectors find horizontal mean position convert longitude/latitude","code":"n_EA_E <- lat_lon2n_E(rad(90), rad(0)) n_EB_E <- lat_lon2n_E(rad(60), rad(10)) n_EC_E <- lat_lon2n_E(rad(50), rad(-20)) (n_EM_E <- unit(n_EA_E + n_EB_E + n_EC_E)) #> [1]  0.38411717 -0.04660241  0.92210749 (l  <- n_E2lat_lon(n_EM_E) %>% deg()) #> [1] 67.236153 -6.917511 (latitude  <- l[1]) #> [1] 67.23615 (longitude <- l[2]) #> [1] -6.917511"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-8-a-and-azimuthdistance-to-b","dir":"Articles","previous_headings":"","what":"Example 8: A and azimuth/distance to B","title":"Simple and Exact Solutions to Position Calculation","text":"Given position \\(\\) n-vector \\(\\mathbf{n}_{EA}^E\\), initial direction travel azimuth (bearing), \\(\\alpha\\), relative north (clockwise), finally distance travel along great circle, \\(s_{AB}\\) find destination point \\(B\\), given \\(\\mathbf{n}_{EB}^E\\). Use Earth radius \\(r_{Earth}\\). geodesy known “first geodetic problem” “direct geodetic problem” sphere, see similar Example 2, now delta given azimuth great circle distance. (“second/inverse geodetic problem” sphere already solved Examples 1 5.) Figure 8: azimuth/distance B.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-7","dir":"Articles","previous_headings":"Example 8: A and azimuth/distance to B","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Given initial values Step 1: Find unit vectors north east per equations (9) (10) (Gade 2010) $$ \\[\\begin{align} \\mathbf{k}_{east}^E  & =   \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\end{bmatrix} \\times \\mathbf{n}^E \\tag{9} \\\\  \\mathbf{k}_{north}^E & =  \\mathbf{n}^E  \\times  \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\end{bmatrix}  \\times \\mathbf{n}^E \\tag{10} \\end{align}\\] $$ Step 2: Find initial direction vector \\(d_E\\) Step 3: Find \\(\\mathbf{n}_{EB}^E\\) Convert longitude/latitude","code":"n_EA_E <- lat_lon2n_E(rad(80),rad(-90)) azimuth <- rad(200) s_AB <- 1000 # distance (m) r_Earth <- 6371e3 # mean Earth radius (m) k_east_E <- unit(pracma::cross(base::t(R_Ee()) %*% c(1, 0, 0) %>% as.vector(), n_EA_E)) k_north_E <- pracma::cross(n_EA_E, k_east_E) d_E <- k_north_E * cos(azimuth) + k_east_E * sin(azimuth) n_EB_E <- n_EA_E * cos(s_AB / r_Earth) + d_E * sin(s_AB / r_Earth) (l  <- n_E2lat_lon(n_EB_E) %>% deg()) #> [1]  79.99155 -90.01770 (latitude  <- l[1]) #> [1] 79.99155 (longitude <- l[2]) #> [1] -90.0177"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-9-intersection-of-two-paths","dir":"Articles","previous_headings":"","what":"Example 9: Intersection of two paths","title":"Simple and Exact Solutions to Position Calculation","text":"Define path two given positions (surface spherical Earth), great circle goes two points. Path given \\(A_1\\) \\(A_2\\), path B given \\(B_1\\) \\(B_2\\). Find position C two great circles intersect. Figure 9: Intersection two paths.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-8","dir":"Articles","previous_headings":"Example 9: Intersection of two paths","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Find intersection two paths, \\(\\mathbf{n}_{EC}^E\\) \\(\\mathbf{n}_{{EC}_{tmp}}^E\\) one two solutions, \\(-\\mathbf{n}_{{EC}_{tmp}}^E\\). Select one closest \\(\\mathbf{n}_{EA_1}^E\\), selecting sign dot product \\(\\mathbf{n}_{{EC}_{tmp}}^E\\) \\(\\mathbf{n}_{EA_1}^E\\) Convert longitude/latitude","code":"n_EA1_E <- lat_lon2n_E(rad(50), rad(180)) n_EA2_E <- lat_lon2n_E(rad(90), rad(180)) n_EB1_E <- lat_lon2n_E(rad(60), rad(160)) n_EB2_E <- lat_lon2n_E(rad(80), rad(-140))  # These are from the python version (results are the same ;-) # n_EA1_E <- lat_lon2n_E(rad(10), rad(20)) # n_EA2_E <- lat_lon2n_E(rad(30), rad(40)) # n_EB1_E <- lat_lon2n_E(rad(50), rad(60)) # n_EB2_E <- lat_lon2n_E(rad(70), rad(80)) n_EC_E_tmp <- unit(pracma::cross(   pracma::cross(n_EA1_E, n_EA2_E),   pracma::cross(n_EB1_E, n_EB2_E))) n_EC_E <- sign(pracma::dot(n_EC_E_tmp, n_EA1_E)) * n_EC_E_tmp (l  <- n_E2lat_lon(n_EC_E) %>% deg()) #> [1]  74.16345 180.00000 (latitude  <- l[1]) #> [1] 74.16345 (longitude <- l[2]) #> [1] 180"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-10-cross-track-distance-cross-track-error","dir":"Articles","previous_headings":"","what":"Example 10: Cross track distance (cross track error)","title":"Simple and Exact Solutions to Position Calculation","text":"Path given two positions \\(A_1\\) \\(A_2\\) (similar previous example). Find cross track distance \\(s_{xt}\\) path (.e. great circle \\(A_1\\) \\(A_2\\)) position \\(B\\) (.e. shortest distance surface, great circle \\(B\\)). Also find Euclidean distance \\(d_{xt}\\) \\(B\\) plane defined great circle. Use Earth radius \\(6371~\\mathrm{km}\\). Figure 10: Cross track distance (cross track error).","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-9","dir":"Articles","previous_headings":"Example 10: Cross track distance (cross track error)","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Given Find unit normal great circle n_EA1_E n_EA2_E shown Figure 11. Figure 11: Vectors cross track distance calculation. Find great circle cross track distance Find Euclidean cross track distance","code":"n_EA1_E <- lat_lon2n_E(rad(0), rad(0)) n_EA2_E <- lat_lon2n_E(rad(10),rad(0)) n_EB_E  <- lat_lon2n_E(rad(1), rad(0.1))  r_Earth <- 6371e3  # mean Earth radius (m) c_E <- unit(pracma::cross(n_EA1_E, n_EA2_E)) (s_xt <- (acos(pracma::dot(c_E, n_EB_E)) - pi / 2) * r_Earth) #> [1] 11117.8 (d_xt <- -pracma::dot(c_E, n_EB_E) * r_Earth) #> [1] 11117.79"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"example-11-cross-track-intersection","dir":"Articles","previous_headings":"","what":"Example 11: Cross track intersection","title":"Simple and Exact Solutions to Position Calculation","text":"Path given two positions \\(A_1\\) \\(A_2\\) (similar previous example). Find cross track intersection point \\(C\\) path (.e. great circle \\(A_1\\) \\(A_2\\)) position \\(B\\), .e. shortest distance point surface, great circle \\(B\\). Figure 12: Cross track intersection.","code":""},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"solution-10","dir":"Articles","previous_headings":"Example 11: Cross track intersection","what":"Solution","title":"Simple and Exact Solutions to Position Calculation","text":"Given (note \\(B\\) doesn’t necessarily need lie \\(A_1\\) \\(A_2\\) per Figure ) Find normal great circle n_EA1_E n_EA2_E: Find intersection points (one antipodal ): Choose one closest B: Convert longitude/latitude","code":"n_EA1_E <- lat_lon2n_E(rad(0), rad(3)) n_EA2_E <- lat_lon2n_E(rad(0),rad(10)) n_EB_E  <- lat_lon2n_E(rad(-1), rad(-1)) n_EN_E <- unit(pracma::cross(n_EA1_E, n_EA2_E)) n_EC_E_tmp <- unit(   pracma::cross(     n_EN_E,     pracma::cross(n_EN_E, n_EB_E)   ) ) n_EC_E <- sign(pracma::dot(n_EC_E_tmp, n_EB_E)) * n_EC_E_tmp (l  <- n_E2lat_lon(n_EC_E) %>% deg()) #> [1]  0 -1 (latitude  <- l[1]) #> [1] 0 (longitude <- l[2]) #> [1] -1"},{"path":"https://nvctr.ansperformance.eu/articles/position-calculations.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Simple and Exact Solutions to Position Calculation","text":"Gade, Kenneth. 2010. “Nonsingular Horizontal Position Representation.” Journal Navigation 63 (03): 395–417. https://www.navlab.net/Publications/A_Nonsingular_Horizontal_Position_Representation.pdf.","code":""},{"path":"https://nvctr.ansperformance.eu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Enrico Spinielli. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://nvctr.ansperformance.eu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Spinielli E (2022). nvctr: n-vector Approach Geographical Position Calculations using Ellipsoidal Model Earth. R package version 0.1.4.9000, https://github.com/euctrl-pru/nvctr.","code":"@Manual{,   title = {nvctr: The n-vector Approach to Geographical Position Calculations using an Ellipsoidal Model of Earth},   author = {Enrico Spinielli},   year = {2022},   note = {R package version 0.1.4.9000},   url = {https://github.com/euctrl-pru/nvctr}, }"},{"path":[]},{"path":"https://nvctr.ansperformance.eu/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"The n-vector Approach to Geographical Position\n    Calculations using an Ellipsoidal Model of Earth","text":"nvctr package implements n-vector approach geographical position calculations using ellipsoidal model Earth described (Gade 2010). Implementations various computer languages can found n-vector page (Navigation Group 2010).","code":""},{"path":"https://nvctr.ansperformance.eu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The n-vector Approach to Geographical Position\n    Calculations using an Ellipsoidal Model of Earth","text":"can install development version nvctr GitHub : CRAN version (package land CRAN):","code":"devtools::install_github(\"euctrl-pru/nvctr\") install.packages(\"nvctr\")"},{"path":"https://nvctr.ansperformance.eu/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"The n-vector Approach to Geographical Position\n    Calculations using an Ellipsoidal Model of Earth","text":"nvctr can used solve geographical position calculation like (example numbers refer ones vignette): Calculate surface distance two geographical positions (Example 5). Find destination point given start point, azimuth/bearing distance (Example 8). Find mean position (center/midpoint) several geographical positions (Example 6). Find intersection two paths (Example 9). Find cross track distance path position (Example 10).","code":""},{"path":"https://nvctr.ansperformance.eu/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"The n-vector Approach to Geographical Position\n    Calculations using an Ellipsoidal Model of Earth","text":"Gade, Kenneth. 2010. “Non-Singular Horizontal Position Representation.” Journal Navigation. https://doi.org/10.1017/S0373463309990415. Navigation Group, FFI. 2010. “N-Vector Page.” https://www.navlab.net/nvector/.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2xyz.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the three rotation angles about new axes in the xyz order from a rotation matrix — R2xyz","title":"Find the three rotation angles about new axes in the xyz order from a rotation matrix — R2xyz","text":"angles (called Euler angles Tait–Bryan angles) defined following procedure successive rotations: Given two arbitrary coordinate frames B, consider temporary frame T initially coincides . order make T align B, first rotate T angle x x-axis (common axis T). Secondly, T rotated angle y NEW y-axis T. Finally, T rotated angle z NEWEST z-axis. final orientation T now coincides orientation B. signs angles given directions axes right hand rule.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2xyz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the three rotation angles about new axes in the xyz order from a rotation matrix — R2xyz","text":"","code":"R2xyz(R_AB)"},{"path":"https://nvctr.ansperformance.eu/reference/R2xyz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the three rotation angles about new axes in the xyz order from a rotation matrix — R2xyz","text":"R_AB 3x3 rotation matrix (direction cosine matrix) relation vector v decomposed B given : v_A = R_AB * v_B","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2xyz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the three rotation angles about new axes in the xyz order from a rotation matrix — R2xyz","text":"x,y,z \tAngles rotation new axes (rad)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2xyz.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the three rotation angles about new axes in the xyz order from a rotation matrix — R2xyz","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/R2xyz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the three rotation angles about new axes in the xyz order from a rotation matrix — R2xyz","text":"","code":"R_AB <- matrix(      c( 0.9980212 ,  0.05230407, -0.0348995 ,        -0.05293623,  0.99844556, -0.01744177,         0.03393297,  0.01925471,  0.99923861),      nrow = 3, ncol = 3, byrow = TRUE) R2xyz(R_AB) #> [1]  0.01745329 -0.03490659 -0.05235987"},{"path":"https://nvctr.ansperformance.eu/reference/R2zyx.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","title":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","text":"3 angles z, y, x new axes (intrinsic) order z-y-x found rotation matrix R_AB. angles (called Euler angles Tait–Bryan angles) defined following procedure successive rotations: Given two arbitrary coordinate frames B, consider temporary frame        T initially coincides . order make T align B,        first rotate T angle z z-axis (common axis T). Secondly, T rotated angle y NEW y-axis T. Finally, T        rotated angle x NEWEST x-axis. final orientation T now coincides orientation B. signs angles given directions axes right hand rule.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2zyx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","text":"","code":"R2zyx(R_AB)"},{"path":"https://nvctr.ansperformance.eu/reference/R2zyx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","text":"R_AB 3x3 rotation matrix (direction cosine matrix) relation vector v decomposed B given : v_A = R_AB * v_B","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2zyx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","text":"z,y,x angles rotation new axes (rad)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2zyx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","text":"Note north-east-frame B body frame, z=yaw, y=pitch x=roll.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R2zyx.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/R2zyx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the three angles about new axes in the zyx order from a rotation matrix — R2zyx","text":"","code":"zyx2R(rad(1), rad(-2), rad(-3)) #>            [,1]        [,2]        [,3] #> [1,] 0.99923861 -0.01560227 -0.03575975 #> [2,] 0.01744177  0.99850932  0.05171974 #> [3,] 0.03489950 -0.05230407  0.99802120"},{"path":"https://nvctr.ansperformance.eu/reference/R_EL2n_E.html","id":null,"dir":"Reference","previous_headings":"","what":"Find n-vector from the rotation matrix (direction cosine matrix) R_EL — R_EL2n_E","title":"Find n-vector from the rotation matrix (direction cosine matrix) R_EL — R_EL2n_E","text":"Find n-vector rotation matrix (direction cosine matrix) R_EL","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_EL2n_E.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find n-vector from the rotation matrix (direction cosine matrix) R_EL — R_EL2n_E","text":"","code":"R_EL2n_E(R_EL)"},{"path":"https://nvctr.ansperformance.eu/reference/R_EL2n_E.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find n-vector from the rotation matrix (direction cosine matrix) R_EL — R_EL2n_E","text":"R_EL Rotation matrix (direction cosine matrix) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_EL2n_E.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find n-vector from the rotation matrix (direction cosine matrix) R_EL — R_EL2n_E","text":"n-vector decomposed E (3x1 vector) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_EL2n_E.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find n-vector from the rotation matrix (direction cosine matrix) R_EL — R_EL2n_E","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/R_EL2n_E.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find n-vector from the rotation matrix (direction cosine matrix) R_EL — R_EL2n_E","text":"","code":"R_EL <- matrix(    c(-1, 0,  0,       0, 1,  0,       0, 0, -1),    nrow = 3, ncol = 3, byrow = TRUE) R_EL2n_E(R_EL) #> [1] 0 0 1"},{"path":"https://nvctr.ansperformance.eu/reference/R_EN2n_E.html","id":null,"dir":"Reference","previous_headings":"","what":"Find n-vector from R_E — R_EN2n_E","title":"Find n-vector from R_E — R_EN2n_E","text":"Find n-vector R_E","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_EN2n_E.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find n-vector from R_E — R_EN2n_E","text":"","code":"R_EN2n_E(R_EN)"},{"path":"https://nvctr.ansperformance.eu/reference/R_EN2n_E.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find n-vector from R_E — R_EN2n_E","text":"R_EN Rotation matrix (direction cosine matrix) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_EN2n_E.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find n-vector from R_E — R_EN2n_E","text":"n-vector decomposed E (3x1 vector) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_EN2n_E.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find n-vector from R_E — R_EN2n_E","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/R_EN2n_E.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find n-vector from R_E — R_EN2n_E","text":"","code":"R_EN <- matrix(    c(-1, 0,  0,       0, 1,  0,       0, 0, -1),    nrow = 3, ncol = 3, byrow = TRUE) R_EL2n_E(R_EN) #> [1] 0 0 1"},{"path":"https://nvctr.ansperformance.eu/reference/R_Ee.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the axes of the coordinate frame E — R_Ee","title":"Select the axes of the coordinate frame E — R_Ee","text":"function returns axes coordinate frame E (Earth-Centered, Earth-Fixed, ECEF).","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_Ee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the axes of the coordinate frame E — R_Ee","text":"","code":"R_Ee(axes = \"e\")"},{"path":"https://nvctr.ansperformance.eu/reference/R_Ee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the axes of the coordinate frame E — R_Ee","text":"axes Either 'e' 'E' 'e': z-axis points North Pole along Earth's rotation axis,          x-axis points towards point latitude = longitude = 0.          choice common many fields. 'E': x-axis points North Pole along Earth's rotation axis,          y-axis points towards longitude +90deg (east) latitude = 0.          (yz-plane coincides equatorial plane).          choice axis ensures zero latitude longitude,          frame N (North-East-) orientation frame E.          roll/pitch/yaw zero, also frame B (forward-starboard-)          orientation. manner, axes frame E          chosen correspond axes frame N B.          functions library originally used option.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_Ee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the axes of the coordinate frame E — R_Ee","text":"rotation matrix defining axes coordinate frame E         described Table 2 Gade (2010)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_Ee.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select the axes of the coordinate frame E — R_Ee","text":"two choices E-axes described Table 2 Gade (2010): e: z-axis points North Pole x-axis points point         latitude = longitude = 0. choice common many fields. E: x-axis points North Pole, y-axis points towards longitude +90deg      (east) latitude = 0. choice axis directions ensures      zero latitude longitude, N (North-East-)      orientation E. roll/pitch/yaw zero, also B (Body,      forward, starboard, ) orientation. manner,      axes E chosen correspond axes N B.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_Ee.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select the axes of the coordinate frame E — R_Ee","text":"Kenneth Gade (2010) Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/R_Ee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select the axes of the coordinate frame E — R_Ee","text":"","code":"R_Ee() #>      [,1] [,2] [,3] #> [1,]    0    0    1 #> [2,]    0    1    0 #> [3,]   -1    0    0"},{"path":"https://nvctr.ansperformance.eu/reference/along_track_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the along-track distance from a great circle arc — along_track_distance","title":"Compute the along-track distance from a great circle arc — along_track_distance","text":"Compute along-track distances body, `b` (example ground level projection  position aircraft), two geographical coordinates,  `a1` `a2` (example airport's runway thresholds), great circle arc.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/along_track_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the along-track distance from a great circle arc — along_track_distance","text":"","code":"along_track_distance(b, a1, a2)"},{"path":"https://nvctr.ansperformance.eu/reference/along_track_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the along-track distance from a great circle arc — along_track_distance","text":"b geographical coordinates (WGS84) body: vector longitude, latitude (decimal degrees) eventually altitude (meters) a1 geographical coordinates (WGS84) one end great circle arc: vector longitude, latitude (decimal degrees) eventually altitude (meters) a2 geographical coordinates (WGS84) end great circle arc: vector longitude, latitude (decimal degrees) eventually altitude (meters)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/along_track_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the along-track distance from a great circle arc — along_track_distance","text":"surface along-track distances `b`'s cross-track intersection `a1` - `a2`","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/along_track_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the along-track distance from a great circle arc — along_track_distance","text":"","code":"if (FALSE) { b <- c(8.086135, 49.973942, 6401) # EDDF: 07R (longitude, latitude, altitude) a1 <- c(8.53417, 50.0275, 328) # EDDF: 25L a2 <- c(8.58653, 50.0401, 362) along_track_distance(b, a1, a2) }"},{"path":"https://nvctr.ansperformance.eu/reference/altitude_azimuth_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the altitude, azimuth and distance of B from A — altitude_azimuth_distance","title":"Calculate the altitude, azimuth and distance of B from A — altitude_azimuth_distance","text":"altitude (elevation horizon), azimuth distance point B coordinates Topocentric Coordinate System typically used astronomy aim telescope heavenly body. can also use know airplane sky respect observer Earth.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/altitude_azimuth_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the altitude, azimuth and distance of B from A — altitude_azimuth_distance","text":"","code":"altitude_azimuth_distance(a, b)"},{"path":"https://nvctr.ansperformance.eu/reference/altitude_azimuth_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the altitude, azimuth and distance of B from A — altitude_azimuth_distance","text":"observer position: vector longitude, latitude (decimal degrees) altitude (meters) WGS84 b observed position: vector longitude, latitude (decimal degrees) altitude (meters) WGS84","code":""},{"path":"https://nvctr.ansperformance.eu/reference/altitude_azimuth_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the altitude, azimuth and distance of B from A — altitude_azimuth_distance","text":"coordinates North-East-observed, B, respect         observer .         vector altitude        (elevation horizon) decimal degrees, azimuth) decimal degrees         distance meters.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/altitude_azimuth_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the altitude, azimuth and distance of B from A — altitude_azimuth_distance","text":"","code":"if (FALSE) { # sensor (longitude, latitude, altitude) a <- c(49.47, 7.697, 274) # aircraft (longitude, latitude, altitude) b <- c(49.52, 7.803, 6401) altitude_azimuth_distance(a, b) }"},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the cross-track distance from a great circle arc — cross_track_distance","title":"Compute the cross-track distance from a great circle arc — cross_track_distance","text":"Compute cross-track distance body, `b` (example ground level projection  position aircraft), great circle arc determined two geographical coordinates,  `a1` `a2` (example airport's runway thresholds).","code":""},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the cross-track distance from a great circle arc — cross_track_distance","text":"","code":"cross_track_distance(b, a1, a2)"},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the cross-track distance from a great circle arc — cross_track_distance","text":"b geographical coordinates (WGS84) body: vector longitude, latitude (decimal degrees) eventually altitude (meters) a1 geographical coordinates (WGS84) one end great circle arc: vector longitude, latitude (decimal degrees) eventually altitude (meters) a2 geographical coordinates (WGS84) end great circle arc: vector longitude, latitude (decimal degrees) eventually altitude (meters)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the cross-track distance from a great circle arc — cross_track_distance","text":"surface cross-track distance `b` arc `a1` - `a2`","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the cross-track distance from a great circle arc — cross_track_distance","text":"","code":"if (FALSE) { b <- c(8.086135, 49.973942, 6401) # EDDF: 07R (longitude, latitude, altitude) a1 <- c(8.53417, 50.0275, 328) # EDDF: 25L a2 <- c(8.58653, 50.0401, 362) cross_track_distance(b, a1, a2) }"},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cross-track intersection — cross_track_intersection","title":"Calculate cross-track intersection — cross_track_intersection","text":"Calculate cross-track intersection position body (.e. aircraft) great circle arc defined two points (.e. runway's thresholds).","code":""},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cross-track intersection — cross_track_intersection","text":"","code":"cross_track_intersection(b, a1, a2)"},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cross-track intersection — cross_track_intersection","text":"b coordinates body, b: vector longitude, latitude (decimal degrees) altitude (meters) WGS84 a1 first coordinate great circle arc: vector longitude, latitude (decimal degrees) elevation (meters) WGS84 a2 second coordinate great circle arc: vector longitude, latitude (decimal degrees) elevation (meters) WGS84","code":""},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_intersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cross-track intersection — cross_track_intersection","text":"WGS84 vector longitude latitude (decimal degrees)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_intersection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate cross-track intersection — cross_track_intersection","text":"cross-track intersection position body, B, (.e. aircraft) great circle arc defined two points, A1 A2, (.e. runway's thresholds) intersection, X, arc great circle arc passing ground projection B, G, perpendicular A1-A2.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/cross_track_intersection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate cross-track intersection — cross_track_intersection","text":"","code":"if (FALSE) { # aircraft (longitude, latitude, altitude) b <- c(8.086135, 49.973942, 6401) # EDDF: 07R (longitude, latitude, altitude) a1 <- c(8.53417, 50.0275, 328) # EDDF: 25L a2 <- c(8.58653, 50.0401, 362) cross_track_intersection(b, a1, a2) }"},{"path":"https://nvctr.ansperformance.eu/reference/deg.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert angle in radians to degrees — deg","title":"Convert angle in radians to degrees — deg","text":"Convert angle radians degrees","code":""},{"path":"https://nvctr.ansperformance.eu/reference/deg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert angle in radians to degrees — deg","text":"","code":"deg(radians)"},{"path":"https://nvctr.ansperformance.eu/reference/deg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert angle in radians to degrees — deg","text":"radians angle radians.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/deg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert angle in radians to degrees — deg","text":"angle degrees.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/deg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert angle in radians to degrees — deg","text":"","code":"deg(pi/2) #> [1] 90"},{"path":"https://nvctr.ansperformance.eu/reference/lat_lon2n_E.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert (geodetic) latitude and longitude to n-vector — lat_lon2n_E","title":"Convert (geodetic) latitude and longitude to n-vector — lat_lon2n_E","text":"Convert (geodetic) latitude longitude n-vector","code":""},{"path":"https://nvctr.ansperformance.eu/reference/lat_lon2n_E.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert (geodetic) latitude and longitude to n-vector — lat_lon2n_E","text":"","code":"lat_lon2n_E(latitude, longitude)"},{"path":"https://nvctr.ansperformance.eu/reference/lat_lon2n_E.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert (geodetic) latitude and longitude to n-vector — lat_lon2n_E","text":"latitude Geodetic latitude (rad) longitude Geodetic longitude (rad)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/lat_lon2n_E.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert (geodetic) latitude and longitude to n-vector — lat_lon2n_E","text":"n-vector decomposed E (3x1 vector) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/lat_lon2n_E.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert (geodetic) latitude and longitude to n-vector — lat_lon2n_E","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/lat_lon2n_E.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert (geodetic) latitude and longitude to n-vector — lat_lon2n_E","text":"","code":"lat_lon2n_E(rad(1), rad(2)) #> [1] 0.99923861 0.03489418 0.01745241"},{"path":"https://nvctr.ansperformance.eu/reference/n_E2R_EN.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the rotation matrix R_EN from n-vector — n_E2R_EN","title":"Find the rotation matrix R_EN from n-vector — n_E2R_EN","text":"Find rotation matrix R_EN n-vector","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E2R_EN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the rotation matrix R_EN from n-vector — n_E2R_EN","text":"","code":"n_E2R_EN(n_E)"},{"path":"https://nvctr.ansperformance.eu/reference/n_E2R_EN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the rotation matrix R_EN from n-vector — n_E2R_EN","text":"n_E n-vector decomposed E (3x1 vector) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E2R_EN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the rotation matrix R_EN from n-vector — n_E2R_EN","text":"resulting rotation matrix (direction cosine matrix) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E2R_EN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the rotation matrix R_EN from n-vector — n_E2R_EN","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/n_E2R_EN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the rotation matrix R_EN from n-vector — n_E2R_EN","text":"","code":"n_E2R_EN(c(1, 0, 0)) #>      [,1] [,2] [,3] #> [1,]    0    0   -1 #> [2,]    0    1    0 #> [3,]    1    0    0"},{"path":"https://nvctr.ansperformance.eu/reference/n_E2lat_lon.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert n-vector to latitude and longitude — n_E2lat_lon","title":"Convert n-vector to latitude and longitude — n_E2lat_lon","text":"Convert n-vector latitude longitude","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E2lat_lon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert n-vector to latitude and longitude — n_E2lat_lon","text":"","code":"n_E2lat_lon(n_E)"},{"path":"https://nvctr.ansperformance.eu/reference/n_E2lat_lon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert n-vector to latitude and longitude — n_E2lat_lon","text":"n_E n-vector decomposed E (3x1 vector) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E2lat_lon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert n-vector to latitude and longitude — n_E2lat_lon","text":"vector geodetic latitude longitude (rad)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E2lat_lon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert n-vector to latitude and longitude — n_E2lat_lon","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/n_E2lat_lon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert n-vector to latitude and longitude — n_E2lat_lon","text":"","code":"n_E2lat_lon(c(1, 0, 0)) #> [1] 0 0"},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_n_EB_E2p_AB_E.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","title":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","text":"Given n-vectors positions (n_EA_E) B (n_EB_E), output delta vector B (p_AB_E).","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_n_EB_E2p_AB_E.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","text":"","code":"n_EA_E_and_n_EB_E2p_AB_E(   n_EA_E,   n_EB_E,   z_EA = 0,   z_EB = 0,   a = 6378137,   f = 1/298.257223563 )"},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_n_EB_E2p_AB_E.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","text":"n_EA_E n-vector position , decomposed E (3x1 vector) (unit) n_EB_E n-vector position B, decomposed E (3x1 vector) (unit) z_EA Depth system , relative ellipsoid (z_EA = -height) (m, default 0) z_EB Depth system B, relative ellipsoid (z_EB = -height) (m, default 0) Semi-major axis Earth ellipsoid (m, default [WGS-84] 6378137) f Flattening Earth ellipsoid (unit, default [WGS-84] 1/298.257223563)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_n_EB_E2p_AB_E.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","text":"Position vector B, decomposed E (3x1 vector)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_n_EB_E2p_AB_E.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","text":"calculation exact, taking ellipticity Earth account. also nonsingular n-vector p-vector nonsingular (except center Earth). default ellipsoid model used WGS-84, ellipsoids (spheres) might specified via optional parameters f.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_n_EB_E2p_AB_E.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_n_EB_E2p_AB_E.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the delta position from two positions A and B — n_EA_E_and_n_EB_E2p_AB_E","text":"","code":"lat_EA <- rad(1); lon_EA <- rad(2); z_EA   <- 3 lat_EB <- rad(4); lon_EB <- rad(5); z_EB   <- 6  n_EA_E <- lat_lon2n_E(lat_EA, lon_EA) n_EB_E <- lat_lon2n_E(lat_EB, lon_EB)  n_EA_E_and_n_EB_E2p_AB_E(n_EA_E, n_EB_E, z_EA, z_EB) #> [1] -34798.44 331985.66 331375.96"},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_p_AB_E2n_EB_E.html","id":null,"dir":"Reference","previous_headings":"","what":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","title":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","text":"Given n-vector position (n_EA_E) position-vector position position B (p_AB_E), output n-vector position B (n_EB_E) depth B (z_EB).","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_p_AB_E2n_EB_E.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","text":"","code":"n_EA_E_and_p_AB_E2n_EB_E(   n_EA_E,   p_AB_E,   z_EA = 0,   a = 6378137,   f = 1/298.257223563 )"},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_p_AB_E2n_EB_E.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","text":"n_EA_E n-vector position , decomposed E (3x1 vector) (unit) p_AB_E Position vector B, decomposed E (3x1 vector) (m) z_EA Depth system , relative ellipsoid (z_EA = -height) (m, default 0) Semi-major axis Earth ellipsoid (m, default [WGS-84] 6378137) f Flattening Earth ellipsoid (unit, default [WGS-84] 1/298.257223563)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_p_AB_E2n_EB_E.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","text":"list n-vector position B, decomposed E (3x1 vector) (unit)         depth system B, relative ellipsoid (z_EB = -height)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_p_AB_E2n_EB_E.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","text":"calculation exact, taking ellipticity Earth account. also nonsingular n-vector p-vector nonsingular (except center Earth). default ellipsoid model used WGS-84, ellipsoids (spheres) might specified.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_p_AB_E2n_EB_E.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/n_EA_E_and_p_AB_E2n_EB_E.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find position B from position A and delta — n_EA_E_and_p_AB_E2n_EB_E","text":"","code":"p_BC_B <- c(3000, 2000, 100)  # Position and orientation of B is given: n_EB_E <- unit(c(1,2,3))  # unit to get unit length of vector z_EB <- -400 R_NB  <- zyx2R(rad(10), rad(20), rad(30)) # yaw, pitch, and roll R_EN <- n_E2R_EN(n_EB_E) R_EB <- R_EN %*% R_NB  # Decompose the delta vector in E: p_BC_E <- (R_EB %*% p_BC_B) %>% as.vector() # no transpose of R_EB, since the vector is in B  # Find the position of C, using the functions that goes from one # position and a delta, to a new position: (n_EB_E <- n_EA_E_and_p_AB_E2n_EB_E(n_EB_E, p_BC_E, z_EB)) #> $n_EB_E #> [1] 0.2667916 0.5343565 0.8020507 #>  #> $z_EB #> [1] -406.0072 #>"},{"path":"https://nvctr.ansperformance.eu/reference/n_EB_E2p_EB_E.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","title":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","text":"function converts position B (typically body) relative E (typically Earth), n-vector n_EB_E cartesian position vector (\"ECEF-vector\"), p_EB_E, meters.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EB_E2p_EB_E.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","text":"","code":"n_EB_E2p_EB_E(n_EB_E, z_EB = 0, a = 6378137, f = 1/298.257223563)"},{"path":"https://nvctr.ansperformance.eu/reference/n_EB_E2p_EB_E.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","text":"n_EB_E n-vector position B, decomposed E (3x1 vector) (unit) z_EB Depth system B, relative ellipsoid (z_EB = -height) (m, default 0) Semi-major axis Earth ellipsoid (m, default [WGS-84] 6378137) f Flattening Earth ellipsoid (unit, default [WGS-84] 1/298.257223563)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EB_E2p_EB_E.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","text":"Cartesian position vector E B, decomposed E (3x1 vector) (m)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EB_E2p_EB_E.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","text":"calculation exact, taking ellipticity Earth account. also nonsingular n-vector p-vector nonsingular (except center Earth). default ellipsoid model used WGS-84, ellipsoids (spheres) might specified via optional parameters f.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_EB_E2p_EB_E.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/n_EB_E2p_EB_E.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert n-vector to cartesian position vector in meters — n_EB_E2p_EB_E","text":"","code":"n_EB_E  <- lat_lon2n_E(rad(1), rad(2)) n_EB_E2p_EB_E(n_EB_E) #> [1] 6373287.3  222560.1  110568.8"},{"path":"https://nvctr.ansperformance.eu/reference/n_E_and_wa2R_EL.html","id":null,"dir":"Reference","previous_headings":"","what":"Find R_EL from n-vector and wander azimuth angle — n_E_and_wa2R_EL","title":"Find R_EL from n-vector and wander azimuth angle — n_E_and_wa2R_EL","text":"Calculate rotation matrix (direction cosine matrix) R_EL using n-vector (n_E) wander azimuth angle. wander_azimuth = 0, N = L (See Table 2 Gade (2010) details)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E_and_wa2R_EL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find R_EL from n-vector and wander azimuth angle — n_E_and_wa2R_EL","text":"","code":"n_E_and_wa2R_EL(n_E, wander_azimuth)"},{"path":"https://nvctr.ansperformance.eu/reference/n_E_and_wa2R_EL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find R_EL from n-vector and wander azimuth angle — n_E_and_wa2R_EL","text":"n_E n-vector decomposed E (3x1 vector) (unit) wander_azimuth angle L's x-axis north, positive L's z-axis (rad)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E_and_wa2R_EL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find R_EL from n-vector and wander azimuth angle — n_E_and_wa2R_EL","text":"resulting rotation matrix (3x3) (unit)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/n_E_and_wa2R_EL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find R_EL from n-vector and wander azimuth angle — n_E_and_wa2R_EL","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/n_E_and_wa2R_EL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find R_EL from n-vector and wander azimuth angle — n_E_and_wa2R_EL","text":"","code":"# Calculates the rotation matrix (direction cosine matrix) R_EL # using n-vector (n_E) and the wander azimuth angle. n_E <- c(1, 0, 0) (R_EL <-  n_E_and_wa2R_EL(n_E, wander_azimuth = pi / 2)) #>              [,1]          [,2] [,3] #> [1,] 0.000000e+00  0.000000e+00   -1 #> [2,] 1.000000e+00  6.123234e-17    0 #> [3,] 6.123234e-17 -1.000000e+00    0"},{"path":"https://nvctr.ansperformance.eu/reference/nvctr.html","id":null,"dir":"Reference","previous_headings":"","what":"nvctr: non-singular geographical position calculations — nvctr","title":"nvctr: non-singular geographical position calculations — nvctr","text":"nvctr provides functions calculate geographical positions  ellipsoidal spherical Earth models.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/nvctr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nvctr: non-singular geographical position calculations — nvctr","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/nvctr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nvctr: non-singular geographical position calculations — nvctr","text":"Maintainer: Enrico Spinielli enrico.spinielli@eurocontrol.int (ORCID) contributors: EUROCONTROL [copyright holder, funder]","code":""},{"path":"https://nvctr.ansperformance.eu/reference/p_EB_E2n_EB_E.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","title":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","text":"position B (typically body) relative E (typically Earth) given cartesian position vector p_EB_E, meters (\"ECEF-vector\").","code":""},{"path":"https://nvctr.ansperformance.eu/reference/p_EB_E2n_EB_E.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","text":"","code":"p_EB_E2n_EB_E(p_EB_E, a = 6378137, f = 1/298.257223563)"},{"path":"https://nvctr.ansperformance.eu/reference/p_EB_E2n_EB_E.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","text":"p_EB_E Cartesian position vector E B, decomposed E (3x1 vector) (m) Semi-major axis Earth ellipsoid (m, default [WGS-84] 6378137) f Flattening Earth ellipsoid (unit, default [WGS-84] 1/298.257223563)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/p_EB_E2n_EB_E.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","text":"n-vector representation position B, decomposed E (3x1 vector) (unit)         depth system B relative ellipsoid (z_EB = -height)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/p_EB_E2n_EB_E.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","text":"function converts n-vector, n_EB_E depth, z_EB. calculation exact, taking ellipticity Earth account. also nonsingular n-vector p-vector nonsingular (except center Earth). default ellipsoid model used WGS-84, ellipsoids (spheres) might specified.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/p_EB_E2n_EB_E.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/p_EB_E2n_EB_E.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert cartesian position vector in meters to n-vector — p_EB_E2n_EB_E","text":"","code":"p_EB_E <- 6371e3 * c(0.9, -1, 1.1) (n_EB_E <- p_EB_E2n_EB_E(p_EB_E)) #> $n_EB_E #> [1]  0.5170890 -0.5745433  0.6344439 #>  #> $z_EB #> [1] -4702060 #>"},{"path":"https://nvctr.ansperformance.eu/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://nvctr.ansperformance.eu/reference/rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert angle in degrees to radians. — rad","title":"Convert angle in degrees to radians. — rad","text":"Convert angle degrees radians.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert angle in degrees to radians. — rad","text":"","code":"rad(degrees)"},{"path":"https://nvctr.ansperformance.eu/reference/rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert angle in degrees to radians. — rad","text":"degrees angle degrees.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert angle in degrees to radians. — rad","text":"angle radians","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/rad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert angle in degrees to radians. — rad","text":"","code":"rad(30) #> [1] 0.5235988"},{"path":"https://nvctr.ansperformance.eu/reference/unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Make input vector unit length, i.e. norm == 1 — unit","title":"Make input vector unit length, i.e. norm == 1 — unit","text":"Make input vector unit length, .e. norm == 1","code":""},{"path":"https://nvctr.ansperformance.eu/reference/unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make input vector unit length, i.e. norm == 1 — unit","text":"","code":"unit(vector)"},{"path":"https://nvctr.ansperformance.eu/reference/unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make input vector unit length, i.e. norm == 1 — unit","text":"vector vector","code":""},{"path":"https://nvctr.ansperformance.eu/reference/unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make input vector unit length, i.e. norm == 1 — unit","text":"unit length vector","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make input vector unit length, i.e. norm == 1 — unit","text":"","code":"unit(c(1,2,3)) #> [1] 0.2672612 0.5345225 0.8017837"},{"path":"https://nvctr.ansperformance.eu/reference/xyz2R.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a rotation matrix from 3 angles about new axes in the xyz order. — xyz2R","title":"Create a rotation matrix from 3 angles about new axes in the xyz order. — xyz2R","text":"rotation matrix R_AB created based 3 angles x, y z new axes (intrinsic) order x-y-z. angles (called Euler angles Tait-Bryan angles) defined following procedure successive rotations: Given two arbitrary coordinate frames B, consider temporary frame          T initially coincides .          order make T align B, first rotate T          angle x x-axis (common axis T). Secondly, T rotated angle y NEW y-axis T. Finally, codeT rotated angle z NEWEST z-axis.          final orientation T now coincides orientation B. signs angles given directions axes right hand rule.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/xyz2R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a rotation matrix from 3 angles about new axes in the xyz order. — xyz2R","text":"","code":"xyz2R(x, y, z)"},{"path":"https://nvctr.ansperformance.eu/reference/xyz2R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a rotation matrix from 3 angles about new axes in the xyz order. — xyz2R","text":"x Angle rotation new x axis (rad) y Angle rotation new y axis (rad) z Angle rotation new z axis (rad)","code":""},{"path":"https://nvctr.ansperformance.eu/reference/xyz2R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a rotation matrix from 3 angles about new axes in the xyz order. — xyz2R","text":"3x3 rotation matrix (direction cosine matrix) relation         vector v decomposed B given : v_A = R_AB * v_B","code":""},{"path":"https://nvctr.ansperformance.eu/reference/xyz2R.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a rotation matrix from 3 angles about new axes in the xyz order. — xyz2R","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/xyz2R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a rotation matrix from 3 angles about new axes in the xyz order. — xyz2R","text":"","code":"xyz2R(rad(10), rad(20), rad(30)) #>            [,1]       [,2]       [,3] #> [1,]  0.8137977 -0.4698463  0.3420201 #> [2,]  0.5438381  0.8231729 -0.1631759 #> [3,] -0.2048741  0.3187958  0.9254166"},{"path":"https://nvctr.ansperformance.eu/reference/zyx2R.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a rotation matrix from 3 angles about new axes in the zyx order. — zyx2R","title":"Create a rotation matrix from 3 angles about new axes in the zyx order. — zyx2R","text":"rotation matrix R_AB created based 3 angles z, y x new axes (intrinsic) order z-y-x. angles (called Euler angles Tait–Bryan angles) defined following procedure successive rotations: Given two arbitrary coordinate frames B, consider temporary frame          T initially coincides . order make T align B,          first rotate T angle z z-axis (common axis T). Secondly, T rotated angle y NEW y-axis T. Finally, T rotated angle x NEWEST x-axis.          final orientation T now coincides orientation B. signs angles given directions axes right hand rule.  Note north-east-frame B body frame,  z=yaw, y=pitch x=roll.","code":""},{"path":"https://nvctr.ansperformance.eu/reference/zyx2R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a rotation matrix from 3 angles about new axes in the zyx order. — zyx2R","text":"","code":"zyx2R(z, y, x)"},{"path":"https://nvctr.ansperformance.eu/reference/zyx2R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a rotation matrix from 3 angles about new axes in the zyx order. — zyx2R","text":"z Angle rotation new z axis y Angle rotation new y axis x Angle rotation new x axis","code":""},{"path":"https://nvctr.ansperformance.eu/reference/zyx2R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a rotation matrix from 3 angles about new axes in the zyx order. — zyx2R","text":"3x3 rotation matrix R_AB (direction cosine matrix)         relation vector v decomposed B         given : v_A = R_AB * v_B","code":""},{"path":"https://nvctr.ansperformance.eu/reference/zyx2R.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a rotation matrix from 3 angles about new axes in the zyx order. — zyx2R","text":"Kenneth Gade Nonsingular Horizontal Position Representation. Journal Navigation, Volume 63, Issue 03, pp 395-417, July 2010.","code":""},{"path":[]},{"path":"https://nvctr.ansperformance.eu/reference/zyx2R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a rotation matrix from 3 angles about new axes in the zyx order. — zyx2R","text":"","code":"zyx2R(rad(30), rad(20), rad(10)) #>            [,1]       [,2]       [,3] #> [1,]  0.8137977 -0.4409696 0.37852231 #> [2,]  0.4698463  0.8825641 0.01802831 #> [3,] -0.3420201  0.1631759 0.92541658"},{"path":[]},{"path":"https://nvctr.ansperformance.eu/news/index.html","id":"nvctr-014","dir":"Changelog","previous_headings":"","what":"nvctr 0.1.4","title":"nvctr 0.1.4","text":"CRAN release: 2020-10-28 removed knitcitations, now missing CRAN fixed spelling typos","code":""},{"path":"https://nvctr.ansperformance.eu/news/index.html","id":"nvctr-013","dir":"Changelog","previous_headings":"","what":"nvctr 0.1.3","title":"nvctr 0.1.3","text":"added cross-track functions","code":""},{"path":"https://nvctr.ansperformance.eu/news/index.html","id":"nvctr-012","dir":"Changelog","previous_headings":"","what":"nvctr 0.1.2","title":"nvctr 0.1.2","text":"added utility functions order show examples application package aviation sector improvements documentation","code":""},{"path":"https://nvctr.ansperformance.eu/news/index.html","id":"nvctr-011","dir":"Changelog","previous_headings":"","what":"nvctr 0.1.1","title":"nvctr 0.1.1","text":"CRAN release: 2019-03-07 Submission CRAN.","code":""}]
